// Generated by CoffeeScript 1.6.3
var Player, hero;

Player = (function() {
  Player.life = 3;

  function Player(sprite) {
    this.sprite = sprite;
    this.alive = true;
    this.health = 3;
    this.velocity_x = 0;
    this.velocity_y = 0;
    this.direction = 1;
  }

  Player.prototype.flip_sprite = function() {
    this.direction *= -1;
    this.sprite.scale.x *= -1;
    return this;
  };

  Player.prototype.move_character = function(dx, dy) {
    if (dx == null) {
      dx = 0;
    }
    if (dy == null) {
      dy = 0;
    }
    this.sprite.position.x += dx;
    this.sprite.position.y += dy;
    return this;
  };

  Player.prototype.collision_test_enemy = function(enemy) {
    var b1, b2;
    b1 = this.bounding_box;
    b2 = enemy.bounding_box();
    return !(b1.x < b2.x + b2.width && b1.x + b1.width > b2.x && b1.y < b2.y + b2.height && b1.y + b1.height > b2.y);
  };

  Player.prototype.collison_test = function(enemy_list) {
    this.bounding_box = this.bounding_box();
    return enemy_list.some(function(enemy) {
      return enemy.collision_test_enemy;
    });
  };

  Player.prototype.update = function(enemy_list) {
    if (this.health <= 0) {
      this.alive = false;
    } else {
      if (collison_test(enemy_list)) {
        this.health -= 1;
      }
      move_character(this.velocity_x, this.velocity_y);
      if (this.direction === 0 && this.velocity_x < 0) {
        flip_sprite();
      }
      if (this.direction === 0 && this.velocity_x < 0) {
        flip_sprite();
      }
      this.velocity_x = 0;
      this.velocity_y = 0;
    }
    return this;
  };

  Player.prototype.bounding_box = function() {
    return new PIXI.Rectangle(this.sprite.position.x, this.sprite.position.y, this.sprite.width, this.sprite.height);
  };

  return Player;

})();

hero = new Player(PIXI.Texture.fromImage('static/hero.png'));
